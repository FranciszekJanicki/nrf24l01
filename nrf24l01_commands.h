#ifndef NRF24L01_NRF24L01_COMMANDS_H
#define NRF24L01_NRF24L01_COMMANDS_H

#include <stdint.h>

typedef enum {
    NRF24L01_CMD_RX_PAYLOAD = 0b01100001,
    NRF24L01_CMD_TX_PAYLOAD = 0b10100000,
    NRF24L01_CMD_FLUSH_TX = 0b11100001,
    NRF24L01_CMD_FLUSH_RX = 0b11100010,
    NRF24L01_CMD_REUSE_TX_PL = 0b11100011,
    NRF24L01_CMD_ACTIVATE = 0b01010000,
    NRF24L01_CMD_R_RX_PL_WID = 0b01100000,
    NRF24L01_CMD_W_ACK_PAYLOAD_P0 = 0b1011000,
    NRF24L01_CMD_W_ACK_PAYLOAD_P1 = 0b1011001,
    NRF24L01_CMD_W_ACK_PAYLOAD_P2 = 0b1011010,
    NRF24L01_CMD_W_ACK_PAYLOAD_P3 = 0b1011011,
    NRF24L01_CMD_W_ACK_PAYLOAD_P4 = 0b1011100,
    NRF24L01_CMD_W_ACK_PAYLOAD_P5 = 0b1011101,
    NRF24L01_CMD_W_TX_PAYLOAD_NOACK = 0b1011000,
    NRF24L01_CMD_NOP = 0b11111111,
} nrf24l01_cmd_t;

typedef struct {
    uint8_t payload[32];
} nrf24l01_ack_payload_cmd_t;

typedef struct {
    uint8_t payload[32];
} nrf24l01_tx_payload_cmd_t;

typedef struct {
    uint8_t payload[32];
} nrf24l01_rx_payload_cmd_t;

#endif // NRF24L01_NRF24L01_COMMANDS_H